basePath: /api/users
definitions:
  models.UpdateProfile:
    properties:
      email:
        type: string
      fname:
        type: string
      lname:
        type: string
      mobile:
        type: string
      updated_at:
        type: string
      updated_by:
        type: string
      username:
        type: string
    type: object
  models.User:
    properties:
      created_at:
        type: string
      created_by:
        type: string
      email:
        type: string
      email_verified_at:
        type: string
      fname:
        type: string
      id:
        type: string
      lname:
        type: string
      mobile:
        type: string
      mobile_verified_at:
        type: string
      password:
        type: string
      status:
        description: -1=deleted, 0=inactive, 1=active
        type: integer
      updated_at:
        type: string
      updated_by:
        type: string
      username:
        type: string
    type: object
info:
  contact: {}
  description: This is the User Service API documentation.
  title: User Service API
  version: "1.0"
paths:
  /users:
    get:
      description: Retrieve a list of all users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.User'
            type: array
      summary: Get all users
      tags:
      - users
    post:
      consumes:
      - application/json
      description: Create a new user with email and password
      parameters:
      - description: User info
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.User'
      summary: Create a new user
      tags:
      - users
  /users/{userId}:
    delete:
      description: Remove user by ID
      parameters:
      - description: User ID
        in: path
        name: userId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
      summary: Delete a user
      tags:
      - users
    get:
      description: Get user details by user ID
      parameters:
      - description: User ID
        in: path
        name: userId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
      summary: Get a user by ID
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Update user fields like name, email, mobile
      parameters:
      - description: User ID
        in: path
        name: userId
        required: true
        type: string
      - description: Updated user info
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.UpdateProfile'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
      summary: Update a user
      tags:
      - users
swagger: "2.0"
